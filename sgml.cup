import java_cup.runtime.*;

parser code {:
	String fileID = null;
	boolean toOutput = false;
	String simplifiedFileContent = "";
	int tabLevel = 0;
	boolean expanded = false;
	String getNameFromOpenTag(String tag){
		return String.valueOf(tag.charAt(1));
	}

	String getNameFromClosingTag(String tag){
		return String.valueOf(tag.charAt(2));
	}
:}

non terminal file, content, openif, setter, endif, opentag, closedtag, orphantag;
terminal OPENTAG, CLOSINGTAG, ORPHAN, OPENIF, CLOSEIF, SET, CONTENT;
file ::= content {:System.out.println();if(expanded){
	System.out.println("Simplified file: \n");
	System.out.println(simplifiedFileContent);
	}:};
content ::= orphantag;
content ::= orphantag content;
content ::= CONTENT:t {:if(toOutput){
		for (int i = 0; i<tabLevel;i++){
			simplifiedFileContent += "\t";
		}
		simplifiedFileContent += String.valueOf(t) + "\n";
	}:};
content ::= CONTENT:t content{:if(toOutput){
		for (int i = 0; i<tabLevel;i++){
			simplifiedFileContent += "\t";
		}
		simplifiedFileContent += String.valueOf(t) + "\n";
	}:};
content ::= opentag:n1 closedtag:n2 {:if(!n1.equals(n2)) throw new Exception ("order of tag is incorrect");:};
content ::= opentag:n1 content closedtag:n2 {:if(!n1.equals(n2)) throw new Exception ("order of tag is incorrect");:};
content ::= opentag:n1 content closedtag:n2 content {:
		if(!n1.equals(n2)) throw new Exception ("order of tag is incorrect");
:};
content ::= opentag:n1 closedtag:n2 content {:
		if(!n1.equals(n2)) throw new Exception ("order of tag is incorrect");
:};

content ::= setter;
content ::= setter content;
content ::= openif endif;
content ::= openif content endif;
content ::= openif content endif content;
content ::= openif endif content;

openif ::= OPENIF:n1 {:toOutput = (fileID != null && fileID.equals(n1));:};
setter ::= SET:n1 {:toOutput = true; expanded = true; fileID = (String) n1;:};
endif ::= CLOSEIF {:toOutput = true;:};

opentag ::= OPENTAG:t {:
	if(toOutput){
		for (int i = 0; i<tabLevel;i++){
			simplifiedFileContent += "\t";
		}
		simplifiedFileContent += String.valueOf(t) + "\n";
		tabLevel ++;
	}
	System.out.print("+"+getNameFromOpenTag(String.valueOf(t))+" ");
	RESULT = getNameFromOpenTag((String)t);:};
closedtag ::= CLOSINGTAG:t {:if(toOutput){
		tabLevel--;
		for (int i = 0; i<tabLevel;i++){
			simplifiedFileContent += "\t";
		}
		simplifiedFileContent += String.valueOf(t) + "\n";
	}
	System.out.print("-"+getNameFromClosingTag(String.valueOf(t))+" ");
	RESULT = getNameFromClosingTag((String)t);:};
orphantag ::= ORPHAN:t {:if(toOutput){
		for (int i = 0; i<tabLevel;i++){
			simplifiedFileContent += "\t";
		}
		simplifiedFileContent += String.valueOf(t) + "\n";
	}
	System.out.print(getNameFromOpenTag(String.valueOf(t))+" ");
	:};
/*Set toOuput to True outside if tags*/
