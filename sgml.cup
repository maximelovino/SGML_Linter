import java_cup.runtime.*;

parser code {:
	String fileID = null;
	boolean toOutput = false;

	String getNameFromOpenTag(String tag){
		return String.valueOf(tag.charAt(1));
	}

	String getNameFromClosingTag(String tag){
		return String.valueOf(tag.charAt(2));
	}
:}

non terminal file;
terminal OPENTAG, CLOSINGTAG, ORPHAN, OPENIF, CLOSEIF, SET, CONTENT;

file ::= ORPHAN;
file ::= ORPHAN file;
file ::= CONTENT;
file ::= CONTENT file;
file ::= OPENTAG:n1 CLOSINGTAG:n2 {:if(!getNameFromOpenTag((String)n1).equals(getNameFromClosingTag((String)n2))) throw new Exception ("order of tag is incorrect");:};
file ::= OPENTAG:n1 file CLOSINGTAG:n2 {:if(!getNameFromOpenTag((String)n1).equals(getNameFromClosingTag((String)n2))) throw new Exception ("order of tag is incorrect");:};
file ::= OPENTAG:n1 file CLOSINGTAG:n2 file {:
		if(!getNameFromOpenTag((String)n1).equals(getNameFromClosingTag((String)n2))) throw new Exception ("order of tag is incorrect");
:};
file ::= OPENTAG:n1 CLOSINGTAG:n2 file {:
		if(!getNameFromOpenTag((String)n1).equals(getNameFromClosingTag((String)n2))) throw new Exception ("order of tag is incorrect");
:};

file ::= SET:id {:fileID = (String) id;:};
file ::= SET:id file {:fileID = (String) id;:};
file ::= OPENIF:n1 CLOSEIF {:
:};
file ::= OPENIF:n1 file:t CLOSEIF {:
	toOutput = (fileID != null && fileID.equals(n1));
	if(toOutput) System.out.println(t);
:};
file ::= OPENIF:n1 file:t CLOSEIF file {:
	toOutput = (fileID != null && fileID.equals(n1));
	if(toOutput) System.out.println(t);
:};
file ::= OPENIF:n1 CLOSEIF file {:
:};
