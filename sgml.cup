import java_cup.runtime.*;

parser code {:
	String fileID = null;
	boolean toOutput = true;

	String getNameFromOpenTag(String tag){
		return String.valueOf(tag.charAt(1));
	}

	String getNameFromClosingTag(String tag){
		return String.valueOf(tag.charAt(2));
	}
:}

non terminal file, openif, setter, endif, opentag, closedtag, orphantag;
terminal OPENTAG, CLOSINGTAG, ORPHAN, OPENIF, CLOSEIF, SET, CONTENT;

file ::= orphantag;
file ::= orphantag file;
file ::= CONTENT:t {:if(toOutput) System.out.println(String.valueOf(t));:};
file ::= CONTENT:t file{:if(toOutput) System.out.println(String.valueOf(t));:};
file ::= opentag:n1 closedtag:n2 {:if(!n1.equals(n2)) throw new Exception ("order of tag is incorrect");:};
file ::= opentag:n1 file closedtag:n2 {:if(!n1.equals(n2)) throw new Exception ("order of tag is incorrect");:};
file ::= opentag:n1 file closedtag:n2 file {:
		if(!n1.equals(n2)) throw new Exception ("order of tag is incorrect");
:};
file ::= opentag:n1 closedtag:n2 file {:
		if(!n1.equals(n2)) throw new Exception ("order of tag is incorrect");
:};

file ::= setter;
file ::= setter file;
file ::= openif endif {:
:};
file ::= openif file endif {:
:};
file ::= openif file endif file {:
:};
file ::= openif endif file {:
:};

openif ::= OPENIF:n1 {:toOutput = (fileID != null && fileID.equals(n1));:};
setter ::= SET:n1 {:fileID = (String) n1;:};
endif ::= CLOSEIF {:toOutput = true;:};

opentag ::= OPENTAG:t {:if(toOutput) System.out.println(t); RESULT = getNameFromOpenTag((String)t);:};
closedtag ::= CLOSINGTAG:t {:if(toOutput) System.out.println(t); RESULT = getNameFromClosingTag((String)t);:};
orphantag ::= ORPHAN:t {:if(toOutput) System.out.println(t);:};
/*Set toOuput to True outside if tags*/
